// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webapi.src.Payment.Infrastructure;

namespace webapi.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("webapi.src.Payment.Domain.Payment", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int>("PaymentStatus");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("webapi.src.Payment.Domain.Payment", b =>
                {
                    b.OwnsOne("webapi.src.Payment.Domain.ValueObject.Ammount", "Ammount", b1 =>
                        {
                            b1.Property<Guid>("PaymentId");

                            b1.Property<decimal>("Value");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.HasOne("webapi.src.Payment.Domain.Payment")
                                .WithOne("Ammount")
                                .HasForeignKey("webapi.src.Payment.Domain.ValueObject.Ammount", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("webapi.src.Payment.Domain.ValueObject.CardHolder", "CardHolder", b1 =>
                        {
                            b1.Property<Guid>("PaymentId");

                            b1.Property<string>("Value")
                                .IsRequired();

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.HasOne("webapi.src.Payment.Domain.Payment")
                                .WithOne("CardHolder")
                                .HasForeignKey("webapi.src.Payment.Domain.ValueObject.CardHolder", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("webapi.src.Payment.Domain.ValueObject.CreditCardNumber", "CreditCardNumber", b1 =>
                        {
                            b1.Property<Guid>("PaymentId");

                            b1.Property<string>("Value")
                                .IsRequired();

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.HasOne("webapi.src.Payment.Domain.Payment")
                                .WithOne("CreditCardNumber")
                                .HasForeignKey("webapi.src.Payment.Domain.ValueObject.CreditCardNumber", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("webapi.src.Payment.Domain.ValueObject.ExpirationDate", "ExpirationDate", b1 =>
                        {
                            b1.Property<Guid>("PaymentId");

                            b1.Property<DateTime>("Value");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.HasOne("webapi.src.Payment.Domain.Payment")
                                .WithOne("ExpirationDate")
                                .HasForeignKey("webapi.src.Payment.Domain.ValueObject.ExpirationDate", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("webapi.src.Payment.Domain.ValueObject.SecurityCode", "SecurityCode", b1 =>
                        {
                            b1.Property<Guid>("PaymentId");

                            b1.Property<string>("Value")
                                .HasMaxLength(3);

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.HasOne("webapi.src.Payment.Domain.Payment")
                                .WithOne("SecurityCode")
                                .HasForeignKey("webapi.src.Payment.Domain.ValueObject.SecurityCode", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
